package ru.mirea.task25.taskStep2;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class IPv4 {
    public static void main(String[] args) {
        //10point: [0-255].[0-255].[0-255].[0-255].
        //16point: 0x[00-FF].0x[00-FF].0x[00-FF].0x[00-FF]
        //8point: 0[000-377].0[000-377].0[000-377].0[000-377]
        //10: [0000000000-4294967295] (max 32-битное число в 10чной)
        //8: 0[00000000000-37777777777] (max 32-битное число в 8чной)
        //16: 0x[00-FF][00-FF][00-FF][00-FF] (литерали то же, но без точек)
        String decPoint = "((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))";
        String hexPoint = "((?:0x(?:[0-9]|[A-F]){2}\\.){3}0x(?:[0-9]|[A-F]){2})";
        String octPoint = "((?:0(?:[0-2][0-9]{2}|3[0-6][0-9]|37[0-7])\\.){3}0(?:[0-2][0-9]{2}|3[0-6][0-9]|37[0-7]))";
        String dec = "([0-3][0-9]{9}|4[0-1][0-9]{8}|42[0-8][0-9]{7}|429[0-3][0-9]{6}|4294[0-8][0-9]{5}|42949[0-5][0-9]{4}|429496[0-6][0-9]{3}|4294967[0-1][0-9]{2}|42949672[0-8][0-9]|429496729[0-5])";
        String hex = "(0x(?:(?:[0-9]|[A-F]){2}){4})";
        String oct = "(0(?:[0-2][0-9]{10}|3[0-6][0-9]{9}|37[0-6][0-9]{8}|377[0-6][0-9]{7}|3777[0-6][0-9]{6}|37777[0-6][0-9]{5}|377777[0-6][0-9]{4}|3777777[0-6][0-9]{3}|37777777[0-6][0-9]{2}|377777777[0-6][0-9]|37777777777))";
        String regex = "^" + decPoint + "|" + hexPoint + "|" + octPoint + "|" + dec + "|" + hex + "|" + oct + "$";
        //String regex = "(?:" + decPoint + "|" + hexPoint + "|" + octPoint + "|" + dec + "|" + hex + "|" + oct + " *)+";
        String[] strings = new String[]{
                "255.255.255.255",
                "0.0.0.0",
                "124.61.0.16",
                "421.42.124.42",
                "0xFF.0xFF.0xFF.0xFF", 
                "0x00.0x00.0x00.0x00", 
                "0xAF.0x52.0xB3.0x00", 
                "0000.0000.0000.0000", 
                "0377.0377.0032.0377", 
                "0000000000", 
                "1473829478", 
                "0005249580", 
                "3859438599", 
                "4290483924", 
                "4294967295", 
                "4294967270", 
                "000000000000", 
                "014783927473", 
                "024897483974", 
                "036758974285", 
                "037777777777", 
                "037777777778", 
                "0xFFFFFFFF", 
                "0x00000000", 
                "0xAF52B300"};
        StringBuilder string = new StringBuilder();
        for (String s : strings) {
            Matcher matcher = Pattern.compile(regex).matcher(s);
            System.out.println(matcher.matches());
            if (matcher.matches()) System.out.println(matcher.group());
        }
    }
}
